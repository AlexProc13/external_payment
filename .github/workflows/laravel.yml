name: Laravel

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    env:
      php-version: "8.1"
      key: cache-v3 # can be any string, change to clear the extension cache.

    services:

    steps:
      - uses: actions/checkout@v3
      - name: Setup cache environment
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ env.php-version }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          coverage: none
          tools: composer:v2, phpunit, phpcs
          ini-values: opcache.enable=1, opcache.enable_cli=1, opcache.revalidate_freq=0, opcache.memory_consumption=512, opcache.interned_strings_buffer=64, opcache.max_accelerated_files=32531, opcache.validate_timestamps=1, opcache.enable_file_override=1, opcache.jit_buffer_size=256M, opcache.jit=1235
        env:
          fail-fast: true

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Run phpcs check - PSR-12 (exclude Generic.Files.LineLength)
        run: phpcs --standard=PSR12 --exclude=Generic.Files.LineLength app/ tests/

      - name: Run Tlint
        run: vendor/bin/tlint lint app/

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 10
          cache: 'npm'
      - run: npm ci
      - run: npm run prod

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: phpunit
